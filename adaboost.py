# -*- coding: utf-8 -*-
"""Adaboost.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1i3tFP4XJY36GlXIltUiOKXrKvVVgi9bP
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

train=pd.read_csv("https://raw.githubusercontent.com/ezioauditore-tech/AI/main/datasets/Titanic/train.csv")
test=pd.read_csv("https://raw.githubusercontent.com/ezioauditore-tech/AI/main/datasets/Titanic/test.csv")

train.info()
test.info()

train.set_index("PassengerId",inplace=True)
test.set_index("PassengerId",inplace=True)

y_train=train["Survived"] #drop

train.drop(labels="Survived",axis=1,inplace=True)

train.shape

train_test=train.append(test)

col_drop=["Name","Age","SibSp","Ticket","Fare","Cabin","Embarked","Parch"]
train_test.drop(labels=col_drop,axis=1,inplace=True)

train_test_dummies=pd.get_dummies(train_test,columns=["Sex"]) #like one hot encoder it performs

train_test_dummies.isnull().sum()

train_test_dummies.fillna(value=0.0,inplace=True)

x_train=train_test_dummies.values[0:891]
x_test=train_test_dummies.values[891:]

from sklearn.preprocessing import MinMaxScaler
scaler=MinMaxScaler()
x_train_scale=scaler.fit_transform(x_train)
x_test_scale=scaler.transform(x_test) #fit use -->already fitsso no need to five fit

from sklearn.model_selection import train_test_split
x_tr_sub,x_val_sub,y_tr_sub,y_val_sub=train_test_split(x_train_scale,y_train,random_state=0)

from sklearn.ensemble import AdaBoostClassifier
from sklearn.metrics import classification_report, confusion_matrix

gb=AdaBoostClassifier(n_estimators=50,random_state=42)
gb.fit(x_tr_sub,y_tr_sub)
print("accuracy score(training): {0:.3f}".format(gb.score(x_tr_sub,y_tr_sub)))
print("accuracy score(validation):{0:.3f}".format(gb.score(x_val_sub,y_val_sub)))

